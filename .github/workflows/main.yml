# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Copy server files to serverBuild folder 
      - name: Build Server in serverBuild folder
        uses: CultureHQ/actions-yarn@master
        with:
          args: run build-server
          
          
      - name: FTP Deployer
      # You may pin to the exact commit or the version.
      # uses: sand4rt/ftp-deployer@b4d8a88f104b46a1bcfac8f69b3413986cc0ce28
        uses: sand4rt/ftp-deployer@v1.3
        with:
          # FTP host URL like: ftp.host.com or sftp.host.com
          host: ${{ secrets.FTP_HOST }}
          # Ftp username
          username: ${{ secrets.FTP_LOGIN }}
          # Ftp password
          password: ${{ secrets.FTP_PASS }}
          # The remote folder location of your FTP server
          remote_folder: API
          # The local folder location
          local_folder: serverBuild
          
      - name: SSH Connection for Installing dependencies and Restarting afterward
        # You may pin to the exact commit or the version.
        # uses: appleboy/ssh-action@1d1b21ca96111b1eb4c03c21c14ebb971d2200f6
        uses: appleboy/ssh-action@v0.1.4
        with:
          # ssh host
          host: ${{ secrets.SSH_HOST }}
          # ssh username
          username: ${{ secrets.SSH_LOGIN }}
          # ssh password
          password: ${{ secrets.SSH_PASS }}
          # execute commands
          script: |
            cloudlinux-selector install-modules --json --interpreter nodejs --user ${{ secrets.SSH_LOGIN }} --app-root API
            cloudlinux-selector restart --json --interpreter nodejs --user kscl5569 --app-root API
          # stop script after first failure
          script_stop: true
